<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.lincsweb</groupId>
	<artifactId>lincsweb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>lincsweb</name>
	<description>Lincs Web Application</description>

    <properties>
	<java.version>1.6</java.version>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
	<spring.version>4.0.2.RELEASE</spring.version>
	 
  </properties>
  
   <repositories>
		 
		<repository>
			<id>in-project</id>
			<url>file://${project.basedir}/repo/lib</url>
		</repository>
	</repositories>

	<dependencies>
		 
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency> 

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>  

		<dependency>
			<groupId>net.sf.flexjson</groupId>
			<artifactId>flexjson</artifactId>
			<version>2.1</version>
		</dependency>
		
		<!-- for local in project rerepository -->
		<dependency>
			<groupId>lincswsclient</groupId>
			<artifactId>lincswsclient</artifactId>
			<version>1.0</version>
		</dependency>
 

	</dependencies>
	<build>
	      <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			
			<plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                 <version>2.2</version>
                 <configuration>
                 <url>${tomcatUrl}</url>
                 <server>${serverName}</server>
                 </configuration>
             </plugin>

			<!-- Compiles your custom GWT components with the GWT compiler -->
			<!-- A hosted mode browser for client-side widget debugging can be run 
				with the goal gwt:run after uncommenting the correct line below. A remote 
				debugger can then be connected to port 8998. Note that e.g. a Jetty server 
				should be running with the server side parts - use the goal jetty:run . -->
		 
		 
			<!-- A simple Jetty test server at http://localhost:8080/geworkbenchweb 
				can be launched with the Maven goal jetty:run and stopped with jetty:stop -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.24</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>lincsweb</stopKey>
					<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
						redeployment -->
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<!-- make sure Jetty also finds the widgetset -->
					<webAppConfig>
						<contextPath>/lincsweb</contextPath>
						<baseResource implementation="org.mortbay.resource.ResourceCollection">
							<!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
							<!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
							<resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
				</configuration>
			</plugin>
		</plugins>
	
	
	
		<finalName>lincsweb</finalName>
	</build>

</project>